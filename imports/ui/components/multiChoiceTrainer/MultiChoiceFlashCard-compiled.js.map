{"version":3,"sources":["MultiChoiceFlashCard.js"],"names":[],"mappings":";;;;;;AAMA,SAAS,oBAAT,CAA8B,UAA9B,EAAyC,OAAzC,EAAiD,KAAjD,EAAwD;;AAEpD,SAAK,SAAL,GAAiB,UAAU,UAAV,EAAsB;AACnC,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAW,CAAX,EAAc,MAAd,EAAsB,GAA1C,EAA+C;AAC3C,iBAAK,OAAL,CAAa,CAAb,IAAkB;AACd,yBAAS,WAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAT;AACA,2BAAW,WAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAX;aAFJ,CAD2C;SAA/C;KADa,CAFmC;AAUpD,SAAK,KAAL,GAAa,UAAS,OAAT,EAAiB;AAC1B,aAAK,EAAL,GAAU,SAAS,OAAT,CAAV,CAD0B;KAAjB,CAVuC;;AAcpD,SAAK,GAAL,GAAW,UAAU,UAAV,EAAqB,OAArB,EAA6B,KAA7B,EAAoC;AAC3C,aAAK,QAAL,GAAgB,WAAW,CAAX,EAAc,CAAd,CAAhB,CAD2C;AAE3C,aAAK,OAAL,GAAe,EAAf,CAF2C;AAG3C,aAAK,SAAL,CAAe,UAAf,EAH2C;AAI3C,aAAK,KAAL,CAAW,OAAX,EAJ2C;AAK3C,aAAK,KAAL,GAAa,KAAb,CAL2C;AAM3C,aAAK,MAAL,GAAc,mBAAd,CAN2C;AAO3C,aAAK,KAAL,GAAa,CAAb,CAP2C;AAQ3C,aAAK,KAAL,GAAa,CAAb,CAR2C;AAS3C,aAAK,MAAL,GAAc,CAAd,CAT2C;AAU3C,aAAK,YAAL,GAAoB,KAApB,CAV2C;KAApC,CAdyC;AA0BpD,SAAK,GAAL,CAAS,UAAT,EAAoB,OAApB,EAA4B,KAA5B,EA1BoD;CAAxD;;AA+BA,SAAS,mBAAT,CAA6B,YAA7B,EAA0C,KAA1C,EAAgD;AAC5C,QAAI,WAAW,EAAX,CADwC;AAE5C,QAAI,UAAU,MAAV,CAFwC;AAG5C,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,aAAa,MAAb,GAAsB,IAAtB,EAA4B,GAAhD,EAAqD;;AAEjD,kBAAU,SAAS,OAAT,CAAV,CAFiD;AAGjD,kBAHiD;AAIjD,kBAAU,QAAQ,QAAR,EAAV,CAJiD;AAKjD,YAAI,MAAM,IAAI,oBAAJ,CAAyB,aAAa,OAAb,CAAzB,EAAgD,OAAhD,EAAwD,KAAxD,CAAN;;AAL6C,gBAOjD,CAAS,CAAT,IAAc,GAAd,CAPiD;KAArD;AASA,WAAO,QAAP,CAZ4C;CAAhD;AAcA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AACzB,QAAI,eAAe,MAAM,MAAN;QAAc,cAAjC;QAAiD,WAAjD;;;AADyB,WAIlB,MAAM,YAAN,EAAoB;;;AAGvB,sBAAc,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,YAAhB,CAAzB,CAHuB;AAIvB,wBAAgB,CAAhB;;;AAJuB,sBAOvB,GAAiB,MAAM,YAAN,CAAjB,CAPuB;AAQvB,cAAM,YAAN,IAAsB,MAAM,WAAN,CAAtB,CARuB;AASvB,cAAM,WAAN,IAAqB,cAArB,CATuB;KAA3B;;AAYA,WAAO,KAAP,CAhByB;CAA7B;;AAmBA,SAAQ,oBAAR,EAA8B,mBAA9B,EAAmD,YAAnD","file":"MultiChoiceFlashCard-compiled.js","sourcesContent":["/**\n expect(testArray[i][2][0]).toEqual(\"Frage\");\n expect(testArray['1002'][3][0][0]).toEqual(true);\n expect(testArray['1002'][3][0][1]).toEqual(\"Antwort1\");\n * Created by Florenz on 13.05.16.\n */\nfunction MultiChoiceFlashCard(arrayValue,counter,owner) {\n\n    this.setAnswer = function (arrayValue) {\n        for (var i = 0; i < arrayValue[3].length; i++) {\n            this.answers[i] = {\n                \"value\": arrayValue[3][i][1],\n                \"correct\": arrayValue[3][i][0]\n            }\n        }\n    };\n    this.setId = function(counter){\n        this.id = parseInt(counter);\n    }\n\n    this.ini = function (arrayValue,counter,owner) {\n        this.question = arrayValue[2][0];\n        this.answers = [];\n        this.setAnswer(arrayValue);\n        this.setId(counter);\n        this.owner = owner;\n        this.listId = \"z6HayndW5dTJNbuDq\";\n        this.right = 0;\n        this.wrong = 0;\n        this.rating = 0;\n        this.lastRevision = false;\n    };\n    this.ini(arrayValue,counter,owner);\n\n}\n\n\nfunction convertTrainerArray(trainerArray,owner){\n    var objArray = [];\n    var counter = \"1001\";\n    for (var i = 0; i < trainerArray.length - 1002; i++) {\n    //    for (var i = 0; i < 10; i++) {\n        counter = parseInt(counter);\n        counter++;\n        counter = counter.toString();\n        var obj = new MultiChoiceFlashCard(trainerArray[counter], counter,owner);\n        //obj = new ClassFlashCard(obj);\n        objArray[i] = obj;\n    }\n    return objArray;\n};\nfunction shuffleArray(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nexport {MultiChoiceFlashCard, convertTrainerArray, shuffleArray}\n\n"]}